include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: PeepMod Library
//--------------------------------------------------------------------------------------------------
// Constants
const string lib1B69CECC_gv_eNEMY_STRUCTURE_DESTROYED = "Enemy Structure Destroyed";
const string lib1B69CECC_gv_gENERATE_INCOME = "Generate Income";
const string lib1B69CECC_gv_rESEARCH_UPGRADE = "Research Upgrade";
const string lib1B69CECC_gv_uNIT_PRODUCED = "Unit Produced";
const string lib1B69CECC_gv_sTRUCTURE_COMPLETED = "Structure Completed";
const fixed lib1B69CECC_gv_sTALEMATE_DELTA_TIME = 128.57;
const int lib1B69CECC_gv_jOIN_LOBBY_TIMEOUT_THRESHOLD = 3;
const int lib1B69CECC_gv_lOBBY_COUNTDOWN_TIME = 11;
const string lib1B69CECC_gv_sTARTLOCATION_1 = "Start Location 001";
const string lib1B69CECC_gv_sTARTLOCATION_2 = "Start Location 002";
const int lib1B69CECC_gv_nO_OF_PLAYERS = 2;

// Structures
struct lib1B69CECC_gs_RevealTimerRecord {
    int lv_time_left;
    int lv_player;
};

struct lib1B69CECC_gs_LobbyTimer {
    bool lv_isStarted;
    datetime lv_startTime;
    timer lv_timer;
};

struct lib1B69CECC_gs_PlayerEnergy {
    int lv_ui_genetron_energy_display;
    int lv_ui_genetron_energy_current;
    int lv_ui_genetron_energy_max;
};

struct lib1B69CECC_gs_MapFeature {
    point lv_position;
    fixed lv_facing;
    string lv_unitType;
};

struct lib1B69CECC_gs_GenetronEnergy {
    fixed lv_energy_max;
    fixed lv_energy_current;
};

struct lib1B69CECC_gs_PlayerStats {
    int lv_ui_minerals_label;
    int lv_ui_gas_label;
    int lv_ui_supplymax_label;
    int lv_ui_supplycurrent_label;
    int lv_ui_energymax_label;
    int lv_ui_energycurrent_label;
    int lv_ui_player_stats;
    int lv_ui_race_state;
    int lv_ui_player_name;
};

struct lib1B69CECC_gs_Lobby {
    playergroup lv_players;
};

// Variable Declarations
fixed lib1B69CECC_gv_overlord_speed;
fixed lib1B69CECC_gv_hydralisk_speed;
fixed lib1B69CECC_gv_hydralisk_speed_creep_mul;
int lib1B69CECC_gv_upgradesCounter;
string[1001] lib1B69CECC_gv_upgradesArray;
int lib1B69CECC_gv_st_player_one;
int lib1B69CECC_gv_st_player_two;
timer lib1B69CECC_gv_tmr_stalemate_message;
timer lib1B69CECC_gv_tmr_stalemate;
int lib1B69CECC_gv_real_time;
bool lib1B69CECC_gv_game_started;
lib1B69CECC_gs_RevealTimerRecord[3] lib1B69CECC_gv_reveal_timer_record;
playergroup lib1B69CECC_gv_rEVEALED_PLAYERS;
bool lib1B69CECC_gv_DETECT_VICTORY;
timer lib1B69CECC_gv_tmrDetectVictory;
playergroup lib1B69CECC_gv_pLAYERS;
playergroup lib1B69CECC_gv_oBSERVERS;
int lib1B69CECC_gv_count;
lib1B69CECC_gs_LobbyTimer lib1B69CECC_gv_lobbyTimer;
int lib1B69CECC_gv_ui_genetron_energy_panel;
int lib1B69CECC_gv_ui_genetron_energy_display;
int lib1B69CECC_gv_ui_genetron_energy_current;
int lib1B69CECC_gv_ui_genetron_energy_max;
lib1B69CECC_gs_PlayerEnergy lib1B69CECC_gv_playerOneEnergy;
lib1B69CECC_gs_PlayerEnergy lib1B69CECC_gv_playerTwoEnergy;
timer lib1B69CECC_gv_tmr_stalemate_message_refesh;
int lib1B69CECC_gv_ui_stalemate_dialog;
int lib1B69CECC_gv_ui_reveal_label2;
int lib1B69CECC_gv_ui_production_tab;
timer lib1B69CECC_gv_ui_matchTime;
int lib1B69CECC_gv_ui_clock;
int lib1B69CECC_gv_ui_clocklabel;
int lib1B69CECC_gv_ui_reveal;
int lib1B69CECC_gv_ui_reveal_label;
int lib1B69CECC_gv_ui_gg_menu;
int lib1B69CECC_gv_ui_gg_menuyes;
int lib1B69CECC_gv_ui_gg_menuno;
int lib1B69CECC_gv_ui_menu;
int lib1B69CECC_gv_ui_play;
int lib1B69CECC_gv_ui_playpanel;
int lib1B69CECC_gv_ui_play_race;
int lib1B69CECC_gv_ui_play_league;
int lib1B69CECC_gv_ui_play_confirm;
int lib1B69CECC_gv_ui_play_cancel;
int lib1B69CECC_gv_ui_help;
int lib1B69CECC_gv_ui_chat;
int lib1B69CECC_gv_ui_lobby_timer_message;
int lib1B69CECC_gv_ui_lobby_timer_dialog;
int lib1B69CECC_gv_ui_lobby_pane;
int lib1B69CECC_gv_ui_lobby_list_frame;
int lib1B69CECC_gv_ui_lobby_list;
int lib1B69CECC_gv_featureCount;
lib1B69CECC_gs_MapFeature[257] lib1B69CECC_gv_mapFeatures;
lib1B69CECC_gs_PlayerStats lib1B69CECC_gv_playerOne;
lib1B69CECC_gs_PlayerStats lib1B69CECC_gv_playerTwo;
int lib1B69CECC_gv_rICH_MINERAL_FIELD_COUNT;
int lib1B69CECC_gv_mINERAL_FIELD_COUNT;
int lib1B69CECC_gv_pLATES_COUNT;
lib1B69CECC_gs_Lobby lib1B69CECC_gv_theLobby;

// Function Declarations
void lib1B69CECC_gf_RecordUnitSpeeds ();
void lib1B69CECC_gf_ResetTech ();
void lib1B69CECC_gf_InitialiseStalemateDetection ();
void lib1B69CECC_gf_StopStalemateDetection ();
void lib1B69CECC_gf_EndMatchInStalemate ();
unitgroup lib1B69CECC_gf_GetGenetronEnergyDummyGroup ();
fixed lib1B69CECC_gf_ComputeGenetronEnergyCurrent (int lp_player);
fixed lib1B69CECC_gf_ComputeGenetronEnergyMax (int lp_player);
void lib1B69CECC_gf_DisplayRaceIcon (int lp_player, structref<lib1B69CECC_gs_PlayerStats> lp_player_stats);
void lib1B69CECC_gf_StartClock ();
void lib1B69CECC_gf_StopClock ();
void lib1B69CECC_gf_ResetRevealStatus ();
void lib1B69CECC_gf_reveal_player (int lp_player);
void lib1B69CECC_gf_unreveal_player (int lp_player);
int lib1B69CECC_gf_find_index_of_player (int lp_player);
bool lib1B69CECC_gf_IsPlayeralreadyinrecord (int lp_player);
void lib1B69CECC_gf_StartRevealTimerCountdown (int lp_player, int lp_index);
void lib1B69CECC_gf_StartRevealTimer (int lp_player);
bool lib1B69CECC_gf_ShouldPlayerBeRevealed (int lp_player);
void lib1B69CECC_gf_KillPlayerRealUnits (int lp_player);
void lib1B69CECC_gf_ResetAllScores ();
void lib1B69CECC_gf_ResetScore (int lp_player);
void lib1B69CECC_gf_RecordPlatesonMap ();
void lib1B69CECC_gf_RecordRocksonMap ();
void lib1B69CECC_gf_RecordBlueMineralsonMap ();
void lib1B69CECC_gf_RecordRichMineralsonMap ();
void lib1B69CECC_gf_DeleteAllMineralFields ();
void lib1B69CECC_gf_DeletePlates ();
void lib1B69CECC_gf_DeleteRocks ();
void lib1B69CECC_gf_RecordStartingMapFeatures ();
void lib1B69CECC_gf_ResetGas ();
void lib1B69CECC_gf_ResetVision ();
void lib1B69CECC_gf_ResetMinerals ();
void lib1B69CECC_gf_ResetPlates ();
void lib1B69CECC_gf_ResetRocks ();
void lib1B69CECC_gf_InitialiseRaceSelections ();
void lib1B69CECC_gf_ResetFogofWar ();
void lib1B69CECC_gf_DisableResourceTrading ();
void lib1B69CECC_gf_ResetAlliances ();
void lib1B69CECC_gf_ResetTechFunction ();
void lib1B69CECC_gf_CleanUpCreep ();
void lib1B69CECC_gf_CleanUpPlayersAndObservers ();
void lib1B69CECC_gf_KillAllPlayerUnits ();
void lib1B69CECC_gf_ResetGame ();
void lib1B69CECC_gf_StartVictoryDetection ();
void lib1B69CECC_gf_StopVictoryDetection ();
int lib1B69CECC_gf_time_remaining (structref<lib1B69CECC_gs_LobbyTimer> lp_theLobbyTimer);
void lib1B69CECC_gf_StopTimer ();
void lib1B69CECC_gf_StartTimer ();
bool lib1B69CECC_gf_IsLobbyAvailable (structref<lib1B69CECC_gs_LobbyTimer> lp_theLobbyTimer);
bool lib1B69CECC_gf_IsEnoughPlayersToStart ();
string lib1B69CECC_gf_choose_race (int lp_race_index);
void lib1B69CECC_gf_InitialisePlayer (int lp_player, string lp_startlocation);
void lib1B69CECC_gf_InitialiseGame (playergroup lp_lobby_Players);
playergroup lib1B69CECC_gf_ChoosePlayersFromLobby (playergroup lp_lobby);
playergroup lib1B69CECC_gf_choose_a_player (playergroup lp_players_in);
playergroup lib1B69CECC_gf_ChooseObserversFromLobby (playergroup lp_lobby, playergroup lp_players);
void lib1B69CECC_gf_ResetLobbyUI ();
text lib1B69CECC_gf_format_player_name (int lp_player);
text lib1B69CECC_gf_race_to_text (int lp_race);
text lib1B69CECC_gf_convertSecondsToTime (int lp_intTotalSeconds);
playergroup lib1B69CECC_gf_nonneutral_players ();
bool lib1B69CECC_gf_is_mineral_field (unit lp_unit);
bool lib1B69CECC_gf_is_plates (unit lp_unit);
bool lib1B69CECC_gf_is_rocks (unit lp_unit);
bool lib1B69CECC_gf_is_rich_mineral_field (unit lp_unit);
string lib1B69CECC_gf_compute_player_race_key (int lp_player);
string lib1B69CECC_gf_compute_mineral_field_key (int lp_mineralIndex);
string lib1B69CECC_gf_compute_plates_key (int lp_mineralIndex);
string lib1B69CECC_gf_compute_rich_mineral_field_key (int lp_mineralIndex);
string lib1B69CECC_gf_compute_mineral_quantity_key (int lp_mineralIndex);
string lib1B69CECC_gf_compute_rich_mineral_quantity_key (int lp_mineralIndex);
int lib1B69CECC_gf_compute_race_index (string lp_race);
string lib1B69CECC_gf_compute_race_from_index (int lp_race_index);
bool lib1B69CECC_gf_is_gas_structure (unit lp_unit);
bool lib1B69CECC_gf_is_town_centre (unit lp_unit);
playergroup lib1B69CECC_gf_compute_winners (playergroup lp_players, playergroup lp_losers);
void lib1B69CECC_gf_HideGenetronEnergyDisplay ();
void lib1B69CECC_gf_DisplayGenetronEnergy (int lp_player);
void lib1B69CECC_gf_InitialiseEnergyDisplay ();
void lib1B69CECC_gf_HideStalemateWarning ();
void lib1B69CECC_gf_DisplayStalemateWarning ();
void lib1B69CECC_gf_InitialiseStalemateDialog ();
void lib1B69CECC_gf_ResetLeaderPanel ();
int lib1B69CECC_gf_DialogItemFromHookup (int lp_dialogItemType, string lp_name);
void lib1B69CECC_gf_InitialiseProductionTab ();
void lib1B69CECC_gf_InitialiseResourceIcons ();
void lib1B69CECC_gf_SetClockSkin ();
void lib1B69CECC_gf_ResetClockDisplay ();
void lib1B69CECC_gf_InitialiseClock ();
void lib1B69CECC_gf_DisplayVictoryMessage (playergroup lp_winners);
void lib1B69CECC_gf_EnableObserverUI (playergroup lp_observers, playergroup lp_players);
void lib1B69CECC_gf_EnablePlayerUI (playergroup lp_players);
void lib1B69CECC_gf_HideRevealDialog (int lp_player);
void lib1B69CECC_gf_ShowRevealCountdown (int lp_player, int lp_time_remaining);
void lib1B69CECC_gf_ShowRevealMessage (int lp_player);
void lib1B69CECC_gf_InitialiseRevealDialog ();
void lib1B69CECC_gf_HideGGMenu ();
void lib1B69CECC_gf_InitialiseGGMenu ();
void lib1B69CECC_gf_InitialiseMenu ();
void lib1B69CECC_gf_InitialisePlayDialog ();
void lib1B69CECC_gf_InitialiseLobbyTimer ();
void lib1B69CECC_gf_HideLobbyTimerMessage ();
void lib1B69CECC_gf_ShowLobbyTimerMessage (int lp_count);
void lib1B69CECC_gf_InitialiseTheLobby ();
void lib1B69CECC_gf_EnableLobbyUI ();
void lib1B69CECC_gf_HideLobby ();
void lib1B69CECC_gf_RefreshLobby (structref<lib1B69CECC_gs_Lobby> lp_lobbyModel);
void lib1B69CECC_gf_ShowLobbyUI ();
void lib1B69CECC_gf_AddMapFeature (point lp_position, fixed lp_facing, string lp_unitType);
void lib1B69CECC_gf_LeaveLobby (int lp_thePlayer, structref<lib1B69CECC_gs_Lobby> lp_thisLobby);
void lib1B69CECC_gf_ClearLobby ();
void lib1B69CECC_gf_JoinLobby (int lp_thePlayer, structref<lib1B69CECC_gs_Lobby> lp_thisLobby);
void lib1B69CECC_gf_DependencyMessage ();

// Trigger Declarations
trigger lib1B69CECC_gt_Upgradeisresearched;
trigger lib1B69CECC_gt_UpdateGenetronEnergyDisplayTrigger;
trigger lib1B69CECC_gt_EnemyStructureDestroyedTrigger;
trigger lib1B69CECC_gt_GenerateIncomeTrigger;
trigger lib1B69CECC_gt_ResearchUpgradeTrigger;
trigger lib1B69CECC_gt_ProduceaUnitTrigger;
trigger lib1B69CECC_gt_ConstructaBuildingTrigger;
trigger lib1B69CECC_gt_StalemateMessageTrigger;
trigger lib1B69CECC_gt_StalemateTrigger;
trigger lib1B69CECC_gt_ResetStalemateDetectionTrigger;
trigger lib1B69CECC_gt_UpdateResourceIconsTrigger;
trigger lib1B69CECC_gt_SetTimeTrigger;
trigger lib1B69CECC_gt_RevealCountdownTrigger;
trigger lib1B69CECC_gt_DetectRevealTrigger;
trigger lib1B69CECC_gt_DetectUnrevealTrigger;
trigger lib1B69CECC_gt_DetectGG;
trigger lib1B69CECC_gt_CleanUpWhenPlayerLeaves;
trigger lib1B69CECC_gt_DetectVictory;
trigger lib1B69CECC_gt_HandleTimeOut;
trigger lib1B69CECC_gt_StalemateUIRefresh;
trigger lib1B69CECC_gt_ClickYes;
trigger lib1B69CECC_gt_ClickNo;
trigger lib1B69CECC_gt_ClickHelp;
trigger lib1B69CECC_gt_ClickChat;
trigger lib1B69CECC_gt_ClickCancel;
trigger lib1B69CECC_gt_ClickConfirm;
trigger lib1B69CECC_gt_RaceSelected;
trigger lib1B69CECC_gt_MeleeInitialization;

// Library Initialization
void lib1B69CECC_InitVariables ();

