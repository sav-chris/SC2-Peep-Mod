include "TriggerLibs/NativeLib"

include "Lib1B69CECC_h"

//--------------------------------------------------------------------------------------------------
// Library: PeepMod Library
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib1B69CECC_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool lib1B69CECC_InitVariables_completed = false;

void lib1B69CECC_InitVariables () {
    if (lib1B69CECC_InitVariables_completed) {
        return;
    }

    lib1B69CECC_InitVariables_completed = true;

    lib1B69CECC_gv_tmrDetectVictory = TimerCreate();
    lib1B69CECC_gv_pLAYERS = PlayerGroupEmpty();
    lib1B69CECC_gv_oBSERVERS = PlayerGroupEmpty();
    lib1B69CECC_gv_lobbyTimer.lv_startTime = CurrentDateTimeGet();
    lib1B69CECC_gv_lobbyTimer.lv_timer = TimerCreate();
    lib1B69CECC_gv_ui_menu = c_invalidDialogControlId;
    lib1B69CECC_gv_ui_play = c_invalidDialogControlId;
    lib1B69CECC_gv_ui_playpanel = c_invalidDialogControlId;
    lib1B69CECC_gv_ui_play_race = c_invalidDialogControlId;
    lib1B69CECC_gv_ui_play_league = c_invalidDialogControlId;
    lib1B69CECC_gv_ui_play_confirm = c_invalidDialogControlId;
    lib1B69CECC_gv_ui_play_cancel = c_invalidDialogControlId;
    lib1B69CECC_gv_ui_help = c_invalidDialogControlId;
    lib1B69CECC_gv_timerWindow = c_timerWindowNone;
    lib1B69CECC_gv_lobbyModal = c_invalidDialogId;
    lib1B69CECC_gv_lobbyListBox = c_invalidDialogControlId;
    lib1B69CECC_gv_theLobby.lv_players = PlayerGroupEmpty();
}

// Functions
void lib1B69CECC_gf_Assert (bool lp_statement, text lp_assertionname, text lp_errormessage) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_statement == true)) {
        TriggerDebugOutput(1, (lp_assertionname + StringExternal("Param/Value/lib_1B69CECC_29FB0C40")), true);
    }
    else {
        TriggerDebugOutput(1, lp_errormessage, true);
    }
}

void lib1B69CECC_gf_test_Choose_Players_From_Lobby () {
    // Variable Declarations
    int lv_aPlayer;
    playergroup lv_lobby;
    playergroup lv_players;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_lobby = PlayerGroupEmpty();
    lv_players = PlayerGroupEmpty();

    // Implementation
    lv_lobby = PlayerGroupEmpty();
    PlayerGroupAdd(lv_lobby, 4);
    PlayerGroupAdd(lv_lobby, 7);
    PlayerGroupAdd(lv_lobby, 3);
    PlayerGroupAdd(lv_lobby, 12);
    PlayerGroupAdd(lv_lobby, 8);
    PlayerGroupAdd(lv_lobby, 10);
    lv_players = lib1B69CECC_gf_ChoosePlayersFromLobby(lv_lobby);
    lib1B69CECC_gf_Assert((PlayerGroupCount(lv_players) == 2), StringExternal("Param/Value/lib_1B69CECC_158EBFD7"), StringExternal("Param/Value/lib_1B69CECC_DECA5D45"));
}

void lib1B69CECC_gf_test_Choose_Observers_From_Lobby () {
    // Variable Declarations
    int lv_aPlayer;
    playergroup lv_lobby;
    playergroup lv_players;
    playergroup lv_observers;
    playergroup lv_intersect;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_lobby = PlayerGroupEmpty();
    lv_players = PlayerGroupEmpty();
    lv_observers = PlayerGroupEmpty();
    lv_intersect = PlayerGroupEmpty();

    // Implementation
    lv_lobby = PlayerGroupEmpty();
    PlayerGroupAdd(lv_lobby, 4);
    PlayerGroupAdd(lv_lobby, 7);
    PlayerGroupAdd(lv_lobby, 3);
    PlayerGroupAdd(lv_lobby, 12);
    PlayerGroupAdd(lv_lobby, 8);
    PlayerGroupAdd(lv_lobby, 10);
    lv_players = lib1B69CECC_gf_ChoosePlayersFromLobby(lv_lobby);
    lv_observers = lib1B69CECC_gf_ChooseObserversFromLobby(lv_lobby, lv_players);
    lib1B69CECC_gf_Assert((PlayerGroupCount(lv_observers) == 4), StringExternal("Param/Value/lib_1B69CECC_8512A993"), StringExternal("Param/Value/lib_1B69CECC_92097C58"));
    lv_intersect = libNtve_gf_IntersectionOfPlayerGroups(lv_players, lv_observers);
    lib1B69CECC_gf_Assert((PlayerGroupCount(lv_intersect) == 0), StringExternal("Param/Value/lib_1B69CECC_A17D4CBC"), StringExternal("Param/Value/lib_1B69CECC_61B75788"));
}

void lib1B69CECC_gf_test_compute_player_race_key () {
    // Variable Declarations
    string lv_race_key;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_race_key = "";

    // Implementation
    lv_race_key = lib1B69CECC_gf_compute_player_race_key(1);
    lib1B69CECC_gf_Assert(StringEqual(lv_race_key, "race_player_1", c_stringCase), StringExternal("Param/Value/lib_1B69CECC_B6025F4F"), StringExternal("Param/Value/lib_1B69CECC_2F1BA268"));
    lv_race_key = lib1B69CECC_gf_compute_player_race_key(5);
    lib1B69CECC_gf_Assert(StringEqual(lv_race_key, "race_player_5", c_stringCase), StringExternal("Param/Value/lib_1B69CECC_0060E0E8"), StringExternal("Param/Value/lib_1B69CECC_65046665"));
}

void lib1B69CECC_gf_test_race_integer_conversion () {
    // Automatic Variable Declarations
    // Implementation
    lib1B69CECC_gf_Assert((lib1B69CECC_gf_compute_race_from_index(lib1B69CECC_gf_compute_race_index("Neut")) == "Neut"), StringExternal("Param/Value/lib_1B69CECC_866ECC49"), StringExternal("Param/Value/lib_1B69CECC_B7AA3D44"));
    lib1B69CECC_gf_Assert((lib1B69CECC_gf_compute_race_from_index(lib1B69CECC_gf_compute_race_index("Terr")) == "Terr"), StringExternal("Param/Value/lib_1B69CECC_D063B6AD"), StringExternal("Param/Value/lib_1B69CECC_8C525690"));
    lib1B69CECC_gf_Assert((lib1B69CECC_gf_compute_race_from_index(lib1B69CECC_gf_compute_race_index("Zerg")) == "Zerg"), StringExternal("Param/Value/lib_1B69CECC_6EE314B4"), StringExternal("Param/Value/lib_1B69CECC_7C40F074"));
    lib1B69CECC_gf_Assert((lib1B69CECC_gf_compute_race_from_index(lib1B69CECC_gf_compute_race_index("Prot")) == "Prot"), StringExternal("Param/Value/lib_1B69CECC_FC9B2791"), StringExternal("Param/Value/lib_1B69CECC_4FB89260"));
    lib1B69CECC_gf_Assert((lib1B69CECC_gf_compute_race_from_index(lib1B69CECC_gf_compute_race_index("Gen")) == "Gen"), StringExternal("Param/Value/lib_1B69CECC_65B515D1"), StringExternal("Param/Value/lib_1B69CECC_798D7B2A"));
    lib1B69CECC_gf_Assert((lib1B69CECC_gf_compute_race_from_index(lib1B69CECC_gf_compute_race_index("Xayi")) == "Xayi"), StringExternal("Param/Value/lib_1B69CECC_F7F7FFB8"), StringExternal("Param/Value/lib_1B69CECC_E156BCB8"));
    lib1B69CECC_gf_Assert((lib1B69CECC_gf_compute_race_from_index(lib1B69CECC_gf_compute_race_index("Keir")) == "Keir"), StringExternal("Param/Value/lib_1B69CECC_11BD8736"), StringExternal("Param/Value/lib_1B69CECC_316FD8E1"));
}

void lib1B69CECC_gf_RecordBlueMineralsonMap () {
    // Variable Declarations
    point lv_pos;
    fixed lv_facing;
    int lv_index;
    string lv_mineral_field_key;
    int lv_mineral_quantity;

    // Automatic Variable Declarations
    unitgroup autoF132B118_g;
    int autoF132B118_u;
    unit autoF132B118_var;

    // Variable Initialization
    lv_mineral_field_key = "";

    // Implementation
    autoF132B118_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, 0, 0), 0);
    autoF132B118_u = UnitGroupCount(autoF132B118_g, c_unitCountAll);
    for (;; autoF132B118_u -= 1) {
        autoF132B118_var = UnitGroupUnitFromEnd(autoF132B118_g, autoF132B118_u);
        if (autoF132B118_var == null) { break; }
        if ((lib1B69CECC_gf_is_mineral_field(autoF132B118_var) == true)) {
            lv_pos = UnitGetPosition(autoF132B118_var);
            lv_facing = UnitGetFacing(autoF132B118_var);
            lv_index = (lv_index + 1);
            lv_mineral_field_key = lib1B69CECC_gf_compute_mineral_field_key(lv_index);
            DataTableSetPoint(true, lv_mineral_field_key, lv_pos);
            lv_mineral_quantity = UnitGetPropertyInt(autoF132B118_var, c_unitPropResources, c_unitPropCurrent);
            DataTableSetInt(true, lib1B69CECC_gf_compute_mineral_quantity_key(lv_index), lv_mineral_quantity);
        }

    }
    DataTableSetInt(true, "mineral_field_count", lv_index);
}

void lib1B69CECC_gf_RecordRichMineralsonMap () {
    // Variable Declarations
    point lv_pos;
    fixed lv_facing;
    int lv_index;
    string lv_mineral_field_key;
    int lv_mineral_quantity;

    // Automatic Variable Declarations
    unitgroup auto2A765CDC_g;
    int auto2A765CDC_u;
    unit auto2A765CDC_var;

    // Variable Initialization
    lv_mineral_field_key = "";

    // Implementation
    auto2A765CDC_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, 0, 0), 0);
    auto2A765CDC_u = UnitGroupCount(auto2A765CDC_g, c_unitCountAll);
    for (;; auto2A765CDC_u -= 1) {
        auto2A765CDC_var = UnitGroupUnitFromEnd(auto2A765CDC_g, auto2A765CDC_u);
        if (auto2A765CDC_var == null) { break; }
        if ((lib1B69CECC_gf_is_rich_mineral_field(auto2A765CDC_var) == true)) {
            lv_pos = UnitGetPosition(auto2A765CDC_var);
            lv_facing = UnitGetFacing(auto2A765CDC_var);
            lv_index = (lv_index + 1);
            lv_mineral_field_key = lib1B69CECC_gf_compute_mineral_field_key(lv_index);
            DataTableSetPoint(true, lv_mineral_field_key, lv_pos);
            lv_mineral_quantity = UnitGetPropertyInt(auto2A765CDC_var, c_unitPropResources, c_unitPropCurrent);
            DataTableSetInt(true, lib1B69CECC_gf_compute_mineral_quantity_key(lv_index), lv_mineral_quantity);
        }

    }
    DataTableSetInt(true, "rich_mineral_field_count", lv_index);
}

void lib1B69CECC_gf_DeleteAllMineralFields () {
    // Automatic Variable Declarations
    unitgroup auto68AF3500_g;
    int auto68AF3500_u;
    unit auto68AF3500_var;

    // Implementation
    auto68AF3500_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, 0, 0), 0);
    auto68AF3500_u = UnitGroupCount(auto68AF3500_g, c_unitCountAll);
    for (;; auto68AF3500_u -= 1) {
        auto68AF3500_var = UnitGroupUnitFromEnd(auto68AF3500_g, auto68AF3500_u);
        if (auto68AF3500_var == null) { break; }
        if (((lib1B69CECC_gf_is_rich_mineral_field(auto68AF3500_var) == true) || (lib1B69CECC_gf_is_mineral_field(auto68AF3500_var) == true))) {
            UnitRemove(auto68AF3500_var);
        }

    }
}

void lib1B69CECC_gf_RecordStartingMapFeatures () {
    // Variable Declarations
    point lv_pos;
    fixed lv_facing;
    int lv_index;
    string lv_mineral_field_key;
    int lv_mineral_quantity;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_mineral_field_key = "";

    // Implementation
    lib1B69CECC_gf_RecordBlueMineralsonMap();
    lib1B69CECC_gf_RecordRichMineralsonMap();
}

void lib1B69CECC_gf_ResetGas () {
    // Variable Declarations
    unit lv_unit;

    // Automatic Variable Declarations
    unitgroup autoCAA5C055_g;
    int autoCAA5C055_u;

    // Variable Initialization

    // Implementation
    autoCAA5C055_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterRawResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoCAA5C055_u = UnitGroupCount(autoCAA5C055_g, c_unitCountAll);
    for (;; autoCAA5C055_u -= 1) {
        lv_unit = UnitGroupUnitFromEnd(autoCAA5C055_g, autoCAA5C055_u);
        if (lv_unit == null) { break; }
        if (((UnitGetType(lv_unit) == "VespeneGeyser") || (UnitGetType(lv_unit) == "ProtossVespeneGeyser") || (UnitGetType(lv_unit) == "PurifierVespeneGeyser") || (UnitGetType(lv_unit) == "ShakurasVespeneGeyser") || (UnitGetType(lv_unit) == "SpacePlatformGeyser") || (UnitGetType(lv_unit) == "RichVespeneGeyser"))) {
            UnitSetPropertyFixed(lv_unit, c_unitPropResources, 5000.0);
        }

    }
}

void lib1B69CECC_gf_ResetMinerals () {
    // Variable Declarations
    const string lv_mineral_field_count_key = "mineral_field_count";
    const string lv_rich_mineral_field_count_key = "rich_mineral_field_count";
    point lv_pos;
    int lv_mineral_field_count;
    int lv_index;
    int lv_mineral_quantity;

    // Automatic Variable Declarations
    int auto0E57139E_ae;
    const int auto0E57139E_ai = 1;
    int autoF8F96ABC_ae;
    const int autoF8F96ABC_ai = 1;

    // Variable Initialization

    // Implementation
    lib1B69CECC_gf_DeleteAllMineralFields();
    lv_mineral_field_count = DataTableGetInt(true, lv_mineral_field_count_key);
    auto0E57139E_ae = lv_mineral_field_count;
    lv_index = 1;
    for ( ; ( (auto0E57139E_ai >= 0 && lv_index <= auto0E57139E_ae) || (auto0E57139E_ai < 0 && lv_index >= auto0E57139E_ae) ) ; lv_index += auto0E57139E_ai ) {
        lv_pos = DataTableGetPoint(true, lib1B69CECC_gf_compute_mineral_field_key(lv_index));
        lv_mineral_quantity = DataTableGetInt(true, lib1B69CECC_gf_compute_mineral_quantity_key(lv_index));
        UnitCreate(1, "MineralField", c_unitCreateIgnorePlacement, 0, lv_pos, 0.0);
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropResources, lv_mineral_quantity);
    }
    lv_mineral_field_count = DataTableGetInt(true, lv_rich_mineral_field_count_key);
    autoF8F96ABC_ae = lv_mineral_field_count;
    lv_index = 1;
    for ( ; ( (autoF8F96ABC_ai >= 0 && lv_index <= autoF8F96ABC_ae) || (autoF8F96ABC_ai < 0 && lv_index >= autoF8F96ABC_ae) ) ; lv_index += autoF8F96ABC_ai ) {
        lv_pos = DataTableGetPoint(true, lib1B69CECC_gf_compute_rich_mineral_field_key(lv_index));
        lv_mineral_quantity = DataTableGetInt(true, lib1B69CECC_gf_compute_rich_mineral_quantity_key(lv_index));
        UnitCreate(1, "RichMineralField", c_unitCreateIgnorePlacement, 0, lv_pos, 0.0);
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropResources, lv_mineral_quantity);
    }
}

void lib1B69CECC_gf_InitialiseRaceSelections () {
    // Variable Declarations
    int lv_aPlayer;

    // Automatic Variable Declarations
    playergroup auto37407480_g;

    // Variable Initialization

    // Implementation
    auto37407480_g = PlayerGroupAll();
    lv_aPlayer = -1;
    while (true) {
        lv_aPlayer = PlayerGroupNextPlayer(auto37407480_g, lv_aPlayer);
        if (lv_aPlayer < 0) { break; }
        DataTableSetInt(true, lib1B69CECC_gf_compute_player_race_key(lv_aPlayer), lib1B69CECC_gf_compute_race_index("Neut"));
    }
}

void lib1B69CECC_gf_KillAllPlayerUnits () {
    // Variable Declarations
    unit lv_aUnit;
    int lv_aPlayer;

    // Automatic Variable Declarations
    playergroup autoF7FB8F78_g;
    unitgroup auto950C134E_g;
    int auto950C134E_u;

    // Variable Initialization

    // Implementation
    autoF7FB8F78_g = lib1B69CECC_gv_pLAYERS;
    lv_aPlayer = -1;
    while (true) {
        lv_aPlayer = PlayerGroupNextPlayer(autoF7FB8F78_g, lv_aPlayer);
        if (lv_aPlayer < 0) { break; }
        auto950C134E_g = UnitGroupFilterPlayer(UnitGroup(null, lv_aPlayer, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterEnemy) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterUncommandable), (1 << (c_targetFilterDead - 32))), 0), lv_aPlayer, 0);
        auto950C134E_u = UnitGroupCount(auto950C134E_g, c_unitCountAll);
        for (;; auto950C134E_u -= 1) {
            lv_aUnit = UnitGroupUnitFromEnd(auto950C134E_g, auto950C134E_u);
            if (lv_aUnit == null) { break; }
            UnitKill(lv_aUnit);
        }
    }
}

void lib1B69CECC_gf_ResetGame () {
    // Automatic Variable Declarations
    // Implementation
    lib1B69CECC_gf_KillAllPlayerUnits();
    lib1B69CECC_gf_ResetGas();
    lib1B69CECC_gf_ResetMinerals();
    lib1B69CECC_gf_InitialiseLobby();
}

void lib1B69CECC_gf_StartVictoryDetection () {
    // Automatic Variable Declarations
    // Implementation
    lib1B69CECC_gv_dETECT_VICTORY = true;
}

void lib1B69CECC_gf_StopVictoryDetection () {
    // Automatic Variable Declarations
    // Implementation
    lib1B69CECC_gv_dETECT_VICTORY = false;
}

void lib1B69CECC_gf_HandleVictory () {
    // Automatic Variable Declarations
    // Implementation
    SoundPlay(SoundLink("CommandCenter_Movement2", -1), PlayerGroupAll(), 100.0, 0.0);
}

void lib1B69CECC_gf_InitialiseLobbyTimer () {
    // Automatic Variable Declarations
    // Implementation
    TimerStart(lib1B69CECC_gv_lobbyTimer.lv_timer, lib1B69CECC_gv_lOBBY_COUNTDOWN_TIME, false, c_timeGame);
    TimerPause(lib1B69CECC_gv_lobbyTimer.lv_timer, true);
    TimerWindowCreate(lib1B69CECC_gv_lobbyTimer.lv_timer, StringExternal("Param/Value/lib_1B69CECC_D7E3EE6D"), true, false);
    lib1B69CECC_gv_timerWindow = TimerWindowLastCreated();
}

int lib1B69CECC_gf_time_remaining (structref<lib1B69CECC_gs_LobbyTimer> lp_theLobbyTimer) {
    // Automatic Variable Declarations
    // Implementation
    return (DateTimeToInt(CurrentDateTimeGet()) - DateTimeToInt(lp_theLobbyTimer.lv_startTime));
}

void lib1B69CECC_gf_StopTimer () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib1B69CECC_gv_lobbyTimer.lv_isStarted == true)) {
        libNtve_gf_StopTimer(lib1B69CECC_gv_lobbyTimer.lv_timer);
        TimerStart(lib1B69CECC_gv_lobbyTimer.lv_timer, lib1B69CECC_gv_lOBBY_COUNTDOWN_TIME, false, c_timeGame);
        TimerPause(lib1B69CECC_gv_lobbyTimer.lv_timer, true);
    }

    lib1B69CECC_gv_lobbyTimer.lv_isStarted = false;
}

void lib1B69CECC_gf_StartTimer () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib1B69CECC_gv_lobbyTimer.lv_isStarted == true)) {
    }
    else {
        lib1B69CECC_gv_lobbyTimer.lv_startTime = CurrentDateTimeGet();
        lib1B69CECC_gv_lobbyTimer.lv_isStarted = true;
        TimerRestart(lib1B69CECC_gv_lobbyTimer.lv_timer);
    }
}

bool lib1B69CECC_gf_IsLobbyAvailable (structref<lib1B69CECC_gs_LobbyTimer> lp_theLobbyTimer) {
    // Automatic Variable Declarations
    // Implementation
    if ((lib1B69CECC_gf_time_remaining(lib1B69CECC_gv_lobbyTimer) <= lib1B69CECC_gv_jOIN_LOBBY_TIMEOUT_THRESHOLD)) {
        return false;
    }
    else {
        return true;
    }
    return true;
}

bool lib1B69CECC_gf_IsEnoughPlayersToStart () {
    // Automatic Variable Declarations
    // Implementation
    if ((PlayerGroupCount(lib1B69CECC_gv_theLobby.lv_players) >= 2)) {
        return true;
    }
    else {
        return false;
    }
    return false;
}

string lib1B69CECC_gf_chose_race (int lp_race_index) {
    // Variable Declarations
    string lv_race;
    int lv_new_idx;

    // Automatic Variable Declarations
    int autoBDC9761C_val;

    // Variable Initialization

    // Implementation
    lv_new_idx = lp_race_index;
    if ((lp_race_index == 1)) {
        lv_new_idx = RandomInt(2, 7);
    }

    if ((lp_race_index > 7)) {
        lv_new_idx = RandomInt(2, 7);
    }

    autoBDC9761C_val = lv_new_idx;
    if (autoBDC9761C_val == 2) {
        lv_race = "Terr";
    }
    else if (autoBDC9761C_val == 3) {
        lv_race = "Zerg";
    }
    else if (autoBDC9761C_val == 4) {
        lv_race = "Prot";
    }
    else if (autoBDC9761C_val == 5) {
        lv_race = "Gen";
    }
    else if (autoBDC9761C_val == 6) {
        lv_race = "Xayi";
    }
    else if (autoBDC9761C_val == 7) {
        lv_race = "Keir";
    }
    else {
        lv_race = "Gen";
    }
    return lv_race;
}

void lib1B69CECC_gf_InitialisePlayer (int lp_player, string lp_startlocation) {
    // Variable Declarations
    int lv_race_index;
    string lv_race_key;
    string lv_race;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_race_key = "";

    // Implementation
    lv_race_key = lib1B69CECC_gf_compute_player_race_key(lp_player);
    lv_race_index = DataTableGetInt(true, lv_race_key);
    lv_race = lib1B69CECC_gf_chose_race(lv_race_index);
    PlayerSetRace(lp_player, lv_race);
    MeleeInitResourcesForPlayer(lp_player, lv_race);
    MeleeInitUnitsForPlayer(lp_player, lv_race, PointFromName(lp_startlocation));
}

void lib1B69CECC_gf_InitialiseGame (playergroup lp_lobby_Players) {
    int init_i;

    // Variable Declarations
    string[3] lv_start_locations;
    int lv_aPlayer;
    int lv_idx;

    // Automatic Variable Declarations
    playergroup autoEF8BA5EB_g;

    // Variable Initialization
    for (init_i = 0; init_i <= 2; init_i += 1) {
        lv_start_locations[init_i] = "";
    }

    // Implementation
    lv_start_locations[0] = lib1B69CECC_gv_sTARTLOCATION_1;
    lv_start_locations[1] = lib1B69CECC_gv_sTARTLOCATION_2;
    lib1B69CECC_gv_pLAYERS = lib1B69CECC_gf_ChoosePlayersFromLobby(lp_lobby_Players);
    lib1B69CECC_gv_oBSERVERS = lib1B69CECC_gf_ChooseObserversFromLobby(PlayerGroupAll(), lib1B69CECC_gv_pLAYERS);
    lv_idx = 0;
    autoEF8BA5EB_g = lib1B69CECC_gv_pLAYERS;
    lv_aPlayer = -1;
    while (true) {
        lv_aPlayer = PlayerGroupNextPlayer(autoEF8BA5EB_g, lv_aPlayer);
        if (lv_aPlayer < 0) { break; }
        lib1B69CECC_gf_InitialisePlayer(lv_aPlayer, lv_start_locations[lv_idx]);
        lv_idx = (lv_idx + 1);
    }
    libNtve_gf_SetPlayerGroupAlliance(lib1B69CECC_gv_pLAYERS, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetPlayerGroupAlliance(lib1B69CECC_gv_oBSERVERS, libNtve_ge_AllianceSetting_Ally);
    lib1B69CECC_gf_HideTimerWindow();
    lib1B69CECC_gf_HideLobby(lib1B69CECC_gv_lobbyModal);
    lib1B69CECC_gf_EnableObserverUI(lib1B69CECC_gv_oBSERVERS, lib1B69CECC_gv_pLAYERS);
    lib1B69CECC_gf_EnablePlayerUI(lib1B69CECC_gv_pLAYERS);
    lib1B69CECC_gf_StartVictoryDetection();
}

playergroup lib1B69CECC_gf_ChoosePlayersFromLobby (playergroup lp_lobby) {
    // Variable Declarations
    playergroup lv_players;
    int lv_player1;
    int lv_player2;
    playergroup lv_temp;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_players = PlayerGroupEmpty();
    lv_temp = PlayerGroupEmpty();

    // Implementation
    lv_temp = PlayerGroupCopy(lp_lobby);
    lv_player1 = PlayerGroupPlayer(lp_lobby, RandomInt(1, PlayerGroupCount(lp_lobby)));
    PlayerGroupRemove(lv_temp, lv_player1);
    lv_player2 = PlayerGroupPlayer(lv_temp, RandomInt(1, PlayerGroupCount(lv_temp)));
    PlayerGroupAdd(lv_players, lv_player1);
    PlayerGroupAdd(lv_players, lv_player2);
    return lv_players;
}

playergroup lib1B69CECC_gf_ChooseObserversFromLobby (playergroup lp_lobby, playergroup lp_players) {
    // Variable Declarations
    playergroup lv_observers;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_observers = PlayerGroupEmpty();

    // Implementation
    lv_observers = PlayerGroupCopy(lp_lobby);
    libNtve_gf_RemovePlayerGroupFromPlayerGroup(lp_players, lv_observers);
    return lv_observers;
}

void lib1B69CECC_gf_InitialiseLobby () {
    // Variable Declarations
    int lv_intPlayer;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lib1B69CECC_gf_EnableLobbyUI();
    lib1B69CECC_gf_ClearLobby();
    lib1B69CECC_gf_ShowLobbyUI();
}

bool lib1B69CECC_gf_is_mineral_field (unit lp_unit) {
    // Automatic Variable Declarations
    // Implementation
    if (((UnitGetType(lp_unit) == "BattleStationMineralField") || (UnitGetType(lp_unit) == "BattleStationMineralField750") || (UnitGetType(lp_unit) == "LabMineralField750") || (UnitGetType(lp_unit) == "LabMineralField") || (UnitGetType(lp_unit) == "MineralField") || (UnitGetType(lp_unit) == "MineralField450") || (UnitGetType(lp_unit) == "MineralField750") || (UnitGetType(lp_unit) == "MineralFieldOpaque900") || (UnitGetType(lp_unit) == "MineralFieldOpaque") || (UnitGetType(lp_unit) == "PurifierMineralField") || (UnitGetType(lp_unit) == "PurifierMineralField750"))) {
        return true;
    }
    else {
        return false;
    }
}

bool lib1B69CECC_gf_is_rich_mineral_field (unit lp_unit) {
    // Automatic Variable Declarations
    // Implementation
    if (((UnitGetType(lp_unit) == "PurifierRichMineralField") || (UnitGetType(lp_unit) == "PurifierRichMineralField750") || (UnitGetType(lp_unit) == "RichMineralField") || (UnitGetType(lp_unit) == "RichMineralField750"))) {
        return true;
    }
    else {
        return false;
    }
}

string lib1B69CECC_gf_compute_player_race_key (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    return ("race_player_" + IntToString(lp_player));
}

string lib1B69CECC_gf_compute_mineral_field_key (int lp_mineralIndex) {
    // Automatic Variable Declarations
    // Implementation
    return ("mineral_field_" + IntToString(lp_mineralIndex));
}

string lib1B69CECC_gf_compute_rich_mineral_field_key (int lp_mineralIndex) {
    // Automatic Variable Declarations
    // Implementation
    return ("rich_mineral_field_" + IntToString(lp_mineralIndex));
}

string lib1B69CECC_gf_compute_mineral_quantity_key (int lp_mineralIndex) {
    // Automatic Variable Declarations
    // Implementation
    return ("mineral_quantity_" + IntToString(lp_mineralIndex));
}

string lib1B69CECC_gf_compute_rich_mineral_quantity_key (int lp_mineralIndex) {
    // Automatic Variable Declarations
    // Implementation
    return ("rich_mineral_quantity_" + IntToString(lp_mineralIndex));
}

int lib1B69CECC_gf_compute_race_index (string lp_race) {
    // Automatic Variable Declarations
    string auto76A18448_val;

    // Implementation
    auto76A18448_val = lp_race;
    if (auto76A18448_val == "Neut") {
        return 1;
    }
    else if (auto76A18448_val == "Terr") {
        return 2;
    }
    else if (auto76A18448_val == "Zerg") {
        return 3;
    }
    else if (auto76A18448_val == "Prot") {
        return 4;
    }
    else if (auto76A18448_val == "Gen") {
        return 5;
    }
    else if (auto76A18448_val == "Xayi") {
        return 6;
    }
    else if (auto76A18448_val == "Keir") {
        return 7;
    }
    else {
        return 1;
    }
}

string lib1B69CECC_gf_compute_race_from_index (int lp_race_index) {
    // Automatic Variable Declarations
    int auto0B0EF7CF_val;

    // Implementation
    auto0B0EF7CF_val = lp_race_index;
    if (auto0B0EF7CF_val == 1) {
        return "Neut";
    }
    else if (auto0B0EF7CF_val == 2) {
        return "Terr";
    }
    else if (auto0B0EF7CF_val == 3) {
        return "Zerg";
    }
    else if (auto0B0EF7CF_val == 4) {
        return "Prot";
    }
    else if (auto0B0EF7CF_val == 5) {
        return "Gen";
    }
    else if (auto0B0EF7CF_val == 6) {
        return "Xayi";
    }
    else if (auto0B0EF7CF_val == 7) {
        return "Keir";
    }
    else {
        return "Neut";
    }
}

void lib1B69CECC_gf_DisableResourceTrading () {
    // Variable Declarations
    int lv_aPlayer;
    int lv_bPlayer2;

    // Automatic Variable Declarations
    playergroup autoA9BF1F9F_g;
    playergroup auto01013A5D_g;

    // Variable Initialization

    // Implementation
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeTeamResourceButton, false);
    UISetResourceTradingAllowed(c_resourceTypeMinerals, false);
    UISetResourceTradingAllowed(c_resourceTypeVespene, false);
    autoA9BF1F9F_g = PlayerGroupAll();
    lv_aPlayer = -1;
    while (true) {
        lv_aPlayer = PlayerGroupNextPlayer(autoA9BF1F9F_g, lv_aPlayer);
        if (lv_aPlayer < 0) { break; }
        auto01013A5D_g = PlayerGroupAll();
        lv_bPlayer2 = -1;
        while (true) {
            lv_bPlayer2 = PlayerGroupNextPlayer(auto01013A5D_g, lv_bPlayer2);
            if (lv_bPlayer2 < 0) { break; }
            if ((lv_aPlayer != lv_bPlayer2)) {
                PlayerSetAlliance(lv_aPlayer, c_allianceIdSpend, lv_bPlayer2, false);
            }

        }
    }
}

void lib1B69CECC_gf_InitialisePlayDialog () {
    // Automatic Variable Declarations
    // Implementation
    DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/FullscreenUpperContainer/PeepPlayPanel");
    lib1B69CECC_gv_ui_playpanel = DialogControlLastCreated();
    DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/FullscreenUpperContainer/PeepMenuPanel");
    lib1B69CECC_gv_ui_menu = DialogControlLastCreated();
    DialogControlHookupStandard(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/PeepMenuPanel/Play");
    lib1B69CECC_gv_ui_play = DialogControlLastCreated();
    DialogControlHookupStandard(c_triggerControlTypePulldown, "UIContainer/FullscreenUpperContainer/PeepPlayPanel/Race");
    lib1B69CECC_gv_ui_play_race = DialogControlLastCreated();
    DialogControlHookupStandard(c_triggerControlTypePulldown, "UIContainer/FullscreenUpperContainer/PeepPlayPanel/League");
    lib1B69CECC_gv_ui_play_league = DialogControlLastCreated();
    DialogControlHookupStandard(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/PeepPlayPanel/Confirm");
    lib1B69CECC_gv_ui_play_confirm = DialogControlLastCreated();
    DialogControlHookupStandard(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/PeepPlayPanel/Cancel");
    lib1B69CECC_gv_ui_play_cancel = DialogControlLastCreated();
    DialogControlHookupStandard(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/PeepMenuPanel/Help");
    lib1B69CECC_gv_ui_help = DialogControlLastCreated();
    DialogControlAddItem(lib1B69CECC_gv_ui_play_race, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_5DE344B1"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_race, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_E5DCA431"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_race, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_F2C43C1F"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_race, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_47AED35E"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_race, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_C874B829"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_race, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_5F50D4B5"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_race, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_3578C5FD"));
    DialogControlSelectItem(lib1B69CECC_gv_ui_play_race, PlayerGroupAll(), 1);
    DialogControlAddItem(lib1B69CECC_gv_ui_play_league, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_299A8AD4"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_league, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_DD98C82C"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_league, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_6DF26637"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_league, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_1E84688D"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_league, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_A7679ABE"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_league, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_0BF87976"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_league, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_AC5D4CE7"));
    DialogControlAddItem(lib1B69CECC_gv_ui_play_league, PlayerGroupAll(), StringExternal("Param/Value/lib_1B69CECC_8C125C91"));
    DialogControlSelectItem(lib1B69CECC_gv_ui_play_league, PlayerGroupAll(), 1);
}

void lib1B69CECC_gf_EnableLobbyUI () {
    // Variable Declarations
    int lv_intPlayer;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeSupply, false);
    DialogControlSetVisible(lib1B69CECC_gv_ui_menu, PlayerGroupAll(), true);
}

void lib1B69CECC_gf_HideTimerWindow () {
    // Automatic Variable Declarations
    // Implementation
    TimerWindowShow(lib1B69CECC_gv_timerWindow, PlayerGroupAll(), false);
}

void lib1B69CECC_gf_ShowTimerWindow () {
    // Automatic Variable Declarations
    // Implementation
    TimerWindowShow(lib1B69CECC_gv_timerWindow, PlayerGroupAll(), true);
}

void lib1B69CECC_gf_HideLobby (int lp_theLobby) {
    // Automatic Variable Declarations
    // Implementation
    DialogSetVisible(lp_theLobby, PlayerGroupAll(), false);
}

void lib1B69CECC_gf_RefreshLobby (structref<lib1B69CECC_gs_Lobby> lp_lobbyModel) {
    // Variable Declarations
    int lv_player;

    // Automatic Variable Declarations
    playergroup auto2DE13D9F_g;

    // Variable Initialization

    // Implementation
    DialogControlRemoveAllItems(lib1B69CECC_gv_lobbyListBox, PlayerGroupAll());
    auto2DE13D9F_g = lp_lobbyModel.lv_players;
    lv_player = -1;
    while (true) {
        lv_player = PlayerGroupNextPlayer(auto2DE13D9F_g, lv_player);
        if (lv_player < 0) { break; }
        DialogControlAddItem(lib1B69CECC_gv_lobbyListBox, PlayerGroupAll(), PlayerName(lv_player));
    }
}

void lib1B69CECC_gf_ShowLobbyUI () {
    // Variable Declarations
    const int lv_sPACEMARGIN = 50;
    const int lv_lOBBY_WIDTH = 700;
    const int lv_lOBBY_HEIGHT = 800;
    const int lv_lOBBY_X = 600;
    const int lv_lOBBY_Y = 100;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    DialogCreate(lv_lOBBY_WIDTH, lv_lOBBY_HEIGHT, c_anchorTopLeft, lv_lOBBY_X, lv_lOBBY_Y, true);
    lib1B69CECC_gv_lobbyModal = DialogLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeListBox);
    lib1B69CECC_gv_lobbyListBox = DialogControlLastCreated();
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), (lv_lOBBY_WIDTH - (2 * lv_sPACEMARGIN)), (lv_lOBBY_HEIGHT - (2 * lv_sPACEMARGIN)));
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, lv_sPACEMARGIN, lv_sPACEMARGIN);
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    lib1B69CECC_gf_ShowTimerWindow();
}

void lib1B69CECC_gf_EnablePlayerUI (playergroup lp_players) {
    // Variable Declarations
    int lv_aPlayer;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    UISetMode(lp_players, c_uiModeConsole, c_transitionDurationImmediate);
    UISetFrameVisible(lp_players, c_syncFrameTypeResourcePanel, true);
    UISetFrameVisible(lp_players, c_syncFrameTypeSupply, true);
    VisEnable(c_visTypeFog, true);
    DialogControlSetVisible(lib1B69CECC_gv_ui_menu, lp_players, false);
    DialogControlSetVisible(lib1B69CECC_gv_ui_playpanel, lp_players, false);
}

void lib1B69CECC_gf_EnableObserverUI (playergroup lp_observers, playergroup lp_players) {
    // Variable Declarations
    int lv_aObserver;
    int lv_aPlayer;

    // Automatic Variable Declarations
    playergroup auto1D4FE5A6_g;
    playergroup autoFF2D6FA4_g;

    // Variable Initialization

    // Implementation
    DialogControlSetVisible(lib1B69CECC_gv_ui_menu, lp_observers, false);
    DialogControlSetVisible(lib1B69CECC_gv_ui_playpanel, lp_observers, false);
    auto1D4FE5A6_g = lp_observers;
    lv_aObserver = -1;
    while (true) {
        lv_aObserver = PlayerGroupNextPlayer(auto1D4FE5A6_g, lv_aObserver);
        if (lv_aObserver < 0) { break; }
        autoFF2D6FA4_g = lp_players;
        lv_aPlayer = -1;
        while (true) {
            lv_aPlayer = PlayerGroupNextPlayer(autoFF2D6FA4_g, lv_aPlayer);
            if (lv_aPlayer < 0) { break; }
            libNtve_gf_SetAllianceOneWay(lv_aPlayer, lv_aObserver, libNtve_ge_AllianceSetting_AllyWithSharedVision);
        }
    }
}

void lib1B69CECC_gf_LeaveLobby (int lp_thePlayer, structref<lib1B69CECC_gs_Lobby> lp_thisLobby) {
    // Automatic Variable Declarations
    // Implementation
    if ((lib1B69CECC_gf_IsLobbyAvailable(lib1B69CECC_gv_lobbyTimer) == true)) {
        PlayerGroupRemove(lp_thisLobby.lv_players, lp_thePlayer);
    }

    if ((lib1B69CECC_gf_IsEnoughPlayersToStart() == true)) {
    }
    else {
        lib1B69CECC_gf_StopTimer();
    }
}

void lib1B69CECC_gf_ClearLobby () {
    // Automatic Variable Declarations
    // Implementation
    PlayerGroupClear(lib1B69CECC_gv_theLobby.lv_players);
}

void lib1B69CECC_gf_JoinLobby (int lp_thePlayer, structref<lib1B69CECC_gs_Lobby> lp_thisLobby) {
    // Automatic Variable Declarations
    // Implementation
    if ((lib1B69CECC_gf_IsLobbyAvailable(lib1B69CECC_gv_lobbyTimer) == true)) {
        PlayerGroupAdd(lp_thisLobby.lv_players, lp_thePlayer);
        if ((lib1B69CECC_gf_IsEnoughPlayersToStart() == true)) {
            lib1B69CECC_gf_StartTimer();
        }

    }

}

void lib1B69CECC_gf_DependencyMessage () {
    // Automatic Variable Declarations
    // Implementation
    TriggerDebugOutput(1, StringExternal("Param/Value/lib_1B69CECC_1F8147D0"), true);
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: run all test cases trigger
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_gt_runalltestcasestrigger_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerDebugSetTypeFile(1, "TriggerDebug.txt");
    lib1B69CECC_gf_test_Choose_Players_From_Lobby();
    lib1B69CECC_gf_test_Choose_Observers_From_Lobby();
    lib1B69CECC_gf_test_compute_player_race_key();
    lib1B69CECC_gf_test_race_integer_conversion();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1B69CECC_gt_runalltestcasestrigger_Init () {
    lib1B69CECC_gt_runalltestcasestrigger = TriggerCreate("lib1B69CECC_gt_runalltestcasestrigger_Func");
    TriggerAddEventChatMessage(lib1B69CECC_gt_runalltestcasestrigger, c_playerAny, "-Run Unit Tests", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add AI Trigger
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_gt_AddAITrigger_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetInt(true, lib1B69CECC_gf_compute_player_race_key(lib1B69CECC_gv_aIPlayer_1), lib1B69CECC_gf_compute_race_index("Gen"));
    lib1B69CECC_gf_JoinLobby(lib1B69CECC_gv_aIPlayer_1, lib1B69CECC_gv_theLobby);
    lib1B69CECC_gf_RefreshLobby(lib1B69CECC_gv_theLobby);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1B69CECC_gt_AddAITrigger_Init () {
    lib1B69CECC_gt_AddAITrigger = TriggerCreate("lib1B69CECC_gt_AddAITrigger_Func");
    TriggerAddEventChatMessage(lib1B69CECC_gt_AddAITrigger, c_playerAny, "-AI Player", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add AI Trigger 2
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_gt_AddAITrigger2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetInt(true, lib1B69CECC_gf_compute_player_race_key(lib1B69CECC_gv_aIPlayer_2), lib1B69CECC_gf_compute_race_index("Zerg"));
    lib1B69CECC_gf_JoinLobby(lib1B69CECC_gv_aIPlayer_2, lib1B69CECC_gv_theLobby);
    lib1B69CECC_gf_RefreshLobby(lib1B69CECC_gv_theLobby);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1B69CECC_gt_AddAITrigger2_Init () {
    lib1B69CECC_gt_AddAITrigger2 = TriggerCreate("lib1B69CECC_gt_AddAITrigger2_Func");
    TriggerAddEventChatMessage(lib1B69CECC_gt_AddAITrigger2, c_playerAny, "-AI Player 2", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start Game Trigger
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_gt_StartGameTrigger_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib1B69CECC_gf_InitialiseGame(lib1B69CECC_gv_theLobby.lv_players);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1B69CECC_gt_StartGameTrigger_Init () {
    lib1B69CECC_gt_StartGameTrigger = TriggerCreate("lib1B69CECC_gt_StartGameTrigger_Func");
    TriggerAddEventChatMessage(lib1B69CECC_gt_StartGameTrigger, c_playerAny, "-Start Game", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Clean Up When Player Leaves
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_gt_CleanUpWhenPlayerLeaves_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_unit;

    // Automatic Variable Declarations
    unitgroup auto5DC909E3_g;
    int auto5DC909E3_u;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto5DC909E3_g = UnitGroupFilterPlayer(UnitGroup(null, EventPlayer(), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterEnemy) | (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterUncommandable), (1 << (c_targetFilterDead - 32))), 0), EventPlayer(), 0);
    auto5DC909E3_u = UnitGroupCount(auto5DC909E3_g, c_unitCountAll);
    for (;; auto5DC909E3_u -= 1) {
        lv_unit = UnitGroupUnitFromEnd(auto5DC909E3_g, auto5DC909E3_u);
        if (lv_unit == null) { break; }
        UnitKill(lv_unit);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1B69CECC_gt_CleanUpWhenPlayerLeaves_Init () {
    lib1B69CECC_gt_CleanUpWhenPlayerLeaves = TriggerCreate("lib1B69CECC_gt_CleanUpWhenPlayerLeaves_Func");
    TriggerAddEventPlayerLeft(lib1B69CECC_gt_CleanUpWhenPlayerLeaves, c_playerAny, c_gameResultVictory);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Detect Victory
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_gt_DetectVictory_Func (bool testConds, bool runActions) {
    // Variable Declarations
    bool lv_restartLobby;
    unit lv_aUnit;
    int lv_aPlayer;

    // Automatic Variable Declarations
    playergroup autoA6D6F3A3_g;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((lib1B69CECC_gv_dETECT_VICTORY == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_restartLobby = false;
    autoA6D6F3A3_g = lib1B69CECC_gv_pLAYERS;
    lv_aPlayer = -1;
    while (true) {
        lv_aPlayer = PlayerGroupNextPlayer(autoA6D6F3A3_g, lv_aPlayer);
        if (lv_aPlayer < 0) { break; }
        if ((UnitGroupCount(UnitGroup(null, lv_aPlayer, RegionEntireMap(), UnitFilter((1 << c_targetFilterStructure) | (1 << c_targetFilterPreventDefeat), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0)) {
            SoundPlay(SoundLink("CommandCenter_Movement2", -1), PlayerGroupAll(), 100.0, 0.0);
            lib1B69CECC_gf_StopVictoryDetection();
            lv_restartLobby = true;
        }

    }
    if ((lv_restartLobby == true)) {
        SoundPlay(SoundLink("CommandCenter_Movement2", -1), PlayerGroupAll(), 100.0, 0.0);
        lib1B69CECC_gf_ResetGame();
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1B69CECC_gt_DetectVictory_Init () {
    lib1B69CECC_gt_DetectVictory = TriggerCreate("lib1B69CECC_gt_DetectVictory_Func");
    TriggerAddEventUnitDied(lib1B69CECC_gt_DetectVictory, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: HandleTimeOut 
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_gt_HandleTimeOut_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib1B69CECC_gf_StopTimer();
    lib1B69CECC_gf_InitialiseGame(lib1B69CECC_gv_theLobby.lv_players);
    DialogControlSetVisible(lib1B69CECC_gv_ui_play_confirm, PlayerGroupAll(), true);
    DialogControlSetVisible(lib1B69CECC_gv_ui_play_cancel, PlayerGroupAll(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1B69CECC_gt_HandleTimeOut_Init () {
    lib1B69CECC_gt_HandleTimeOut = TriggerCreate("lib1B69CECC_gt_HandleTimeOut_Func");
    TriggerAddEventTimer(lib1B69CECC_gt_HandleTimeOut, lib1B69CECC_gv_lobbyTimer.lv_timer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Click Help
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_gt_ClickHelp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib1B69CECC_gv_ui_help))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    HelpPanelDisplayPage(PlayerGroupAll(), c_helpPanelPageTutorials);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1B69CECC_gt_ClickHelp_Init () {
    lib1B69CECC_gt_ClickHelp = TriggerCreate("lib1B69CECC_gt_ClickHelp_Func");
    TriggerAddEventDialogControl(lib1B69CECC_gt_ClickHelp, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Click Cancel
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_gt_ClickCancel_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib1B69CECC_gv_ui_play_cancel))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib1B69CECC_gf_LeaveLobby(EventPlayer(), lib1B69CECC_gv_theLobby);
    lib1B69CECC_gf_RefreshLobby(lib1B69CECC_gv_theLobby);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1B69CECC_gt_ClickCancel_Init () {
    lib1B69CECC_gt_ClickCancel = TriggerCreate("lib1B69CECC_gt_ClickCancel_Func");
    TriggerAddEventDialogControl(lib1B69CECC_gt_ClickCancel, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Click Confirm
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_gt_ClickConfirm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib1B69CECC_gv_ui_play_confirm))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib1B69CECC_gf_JoinLobby(EventPlayer(), lib1B69CECC_gv_theLobby);
    lib1B69CECC_gf_RefreshLobby(lib1B69CECC_gv_theLobby);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1B69CECC_gt_ClickConfirm_Init () {
    lib1B69CECC_gt_ClickConfirm = TriggerCreate("lib1B69CECC_gt_ClickConfirm_Func");
    TriggerAddEventDialogControl(lib1B69CECC_gt_ClickConfirm, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Race Selected
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_gt_RaceSelected_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_raceIndex;
    const int lv_rANDOM_INDEX = 0;
    const int lv_tERRAN_INDEX = 1;
    const int lv_zERG_INDEX = 2;
    const int lv_pROTOSS_INDEX = 3;
    const int lv_gENETRON_INDEX = 4;
    const int lv_xAYID_INDEX = 5;
    const int lv_kEIRON_INDEX = 6;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib1B69CECC_gv_ui_play_race))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_raceIndex = DialogControlGetSelectedItem(lib1B69CECC_gv_ui_play_race, EventPlayer());
    DataTableSetInt(true, lib1B69CECC_gf_compute_player_race_key(EventPlayer()), lv_raceIndex);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1B69CECC_gt_RaceSelected_Init () {
    lib1B69CECC_gt_RaceSelected = TriggerCreate("lib1B69CECC_gt_RaceSelected_Func");
    TriggerAddEventDialogControl(lib1B69CECC_gt_RaceSelected, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeSelectionChanged);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Melee Initialization
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_gt_MeleeInitialization_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    GameSetSpeedValue(c_gameSpeedFaster);
    lib1B69CECC_gf_DisableResourceTrading();
    lib1B69CECC_gf_InitialiseRaceSelections();
    lib1B69CECC_gf_RecordStartingMapFeatures();
    lib1B69CECC_gf_InitialiseLobbyTimer();
    lib1B69CECC_gf_InitialisePlayDialog();
    lib1B69CECC_gf_InitialiseLobby();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib1B69CECC_gt_MeleeInitialization_Init () {
    lib1B69CECC_gt_MeleeInitialization = TriggerCreate("lib1B69CECC_gt_MeleeInitialization_Func");
    TriggerAddEventMapInit(lib1B69CECC_gt_MeleeInitialization);
}

void lib1B69CECC_InitTriggers () {
    lib1B69CECC_gt_runalltestcasestrigger_Init();
    lib1B69CECC_gt_AddAITrigger_Init();
    lib1B69CECC_gt_AddAITrigger2_Init();
    lib1B69CECC_gt_StartGameTrigger_Init();
    lib1B69CECC_gt_CleanUpWhenPlayerLeaves_Init();
    lib1B69CECC_gt_DetectVictory_Init();
    lib1B69CECC_gt_HandleTimeOut_Init();
    lib1B69CECC_gt_ClickHelp_Init();
    lib1B69CECC_gt_ClickCancel_Init();
    lib1B69CECC_gt_ClickConfirm_Init();
    lib1B69CECC_gt_RaceSelected_Init();
    lib1B69CECC_gt_MeleeInitialization_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib1B69CECC_InitLib_completed = false;

void lib1B69CECC_InitLib () {
    if (lib1B69CECC_InitLib_completed) {
        return;
    }

    lib1B69CECC_InitLib_completed = true;

    lib1B69CECC_InitLibraries();
    lib1B69CECC_InitVariables();
    lib1B69CECC_InitTriggers();
}

